version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: app_mysql_prod
    restart: always
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
      - ./logs/mysql:/var/log/mysql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Laravel Backend
  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: app_laravel_prod
    restart: always
    volumes:
      - ./backend/storage:/var/www/html/storage
      - ./backend/.env:/var/www/html/.env:ro
      - ./logs/laravel:/var/www/html/storage/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://${DOMAIN}
      - DB_HOST=mysql
      - DB_DATABASE=laravel_db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=https://${DOMAIN}/api
    container_name: app_react_prod
    restart: always
    networks:
      - app_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: app_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      laravel:
        condition: service_healthy
      react:
        condition: service_started
    environment:
      - DOMAIN=${DOMAIN}
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:alpine
    container_name: app_redis_prod
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Queue Worker (optional)
  queue:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: app_queue_prod
    restart: always
    volumes:
      - ./backend/storage:/var/www/html/storage
      - ./backend/.env:/var/www/html/.env:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=laravel_db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - app_network

  # Scheduler (optional)
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: app_scheduler_prod
    restart: always
    volumes:
      - ./backend/storage:/var/www/html/storage
      - ./backend/.env:/var/www/html/.env:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=laravel_db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      sh -c "while true; do
        php artisan schedule:run;
        sleep 60;
      done"
    networks:
      - app_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16